<?php

require_once './config.php';
require_once './functions.php';


class MySQL {

  //===============================================================================================
  //--- подключение к базе данных -----------------------------------------------------------------
  //===============================================================================================
  public $link;


  //===============================================================================================
  //--- конструктор -------------------------------------------------------------------------------
  //===============================================================================================
  public function __construct() {
    global $nameSERVER, $nameUSER, $passUSER, $nameDB;
    try {
      $this->link = mysqli_connect($nameSERVER, $nameUSER, $passUSER, $nameDB);
      if ($this->link) {
        $this->link->query("SET NAMES 'UTF8'");
        $this->link->query("SET SESSION collation_connection = 'utf8mb4_unicode_ci';");
      } else {
        echoError('ОШИБКА: Ошибка подключения к БД.');
        exit();
      }
    } catch (Exception $ex) {
      echoError('ОШИБКА: Ошибка подключения к БД. ' . $ex->getMessage());
      exit();
    }
  }


  //===============================================================================================
  //--- выборка всех данных -----------------------------------------------------------------------
  //===============================================================================================
  public function querySelect($sql) {
    $rows = [];
    try {
      $res = $this->link->query($sql);
      if ($this->link->error) {
        echoError('ОШИБКА: Ошибка запроса к БД. ' . $this->link->error);
        exit();
      }
      if ($res && $res->num_rows > 0) {
        $rows = $res->fetch_all(MYSQLI_ASSOC);
        return $rows;
      }
    } catch (Exception $ex) {
      echoError('ОШИБКА: Ошибка запроса к БД. ' . $ex->getMessage());
      exit();
    }
  }


  //===============================================================================================
  //--- выполнение скрипта SQL без возврата значения ----------------------------------------------
  //===============================================================================================
  public function queryUpdate($sql) {
    try {
      $this->link->query($sql);
      if ($this->link->error) {
        echoError('ОШИБКА: Ошибка запроса к БД. ' . $this->link->error);
        exit();
      }
    } catch (Exception $ex) {
      echoError('ОШИБКА: Ошибка запроса к БД. ' . $ex->getMessage());
      exit();
    }
  }


  //===============================================================================================
  //--- выполнение скрипта SQL с возвратом значения -----------------------------------------------
  //===============================================================================================
  public function queryInsert($sql) {
    try {
      $maxId = 0;
      $this->link->query($sql);
      if ($this->link->error) {
        echoError('ОШИБКА: Ошибка запроса к БД. ' . $this->link->error);
        exit();
      }
      $maxId = $this->link->insert_id;
    } catch (Exception $ex) {
      echoError('ОШИБКА: Ошибка запроса к БД. ' . $ex->getMessage());
      exit();
    }
    return $maxId;
  }


  //===============================================================================================
  //--- выполнение скрипта SQL для удаления записей -----------------------------------------------
  //===============================================================================================
  public function queryDelete($sql) {
    try {
      $this->link->query($sql);
      if ($this->link->error) {
        echoError('ОШИБКА: Ошибка запроса к БД. ' . $this->link->error);
        exit();
      }
    } catch (Exception $ex) {
      echoError('ОШИБКА: Ошибка запроса к БД. ' . $ex->getMessage());
      exit();
    }
  }

}

?>
